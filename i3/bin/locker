#!/bin/bash

SCREEN_OFF_DEFAULT_WAIT_TIME_IN_SEC=20
SUSPEND_DEFAULT_WAIT_TIME_IN_SEC=20

function lock_screen() {
    # Take a screenshot:
    scrot /tmp/screen.png

    # Create a blur on the shot:
    convert /tmp/screen.png -resize 10% /tmp/screen.png
    convert /tmp/screen.png -resize 1000% /tmp/screen.png

    # Add the lock to the blurred image:
    [[ -f ~/.config/i3/lock.png ]] && convert /tmp/screen.png  ~/.config/i3/lock.png -gravity center -composite -matte /tmp/screen.png

    # Lock it up!
    i3lock -e -f -c 000000 -i /tmp/screen.png
}

function lock_power_save() {
    # If still locked after xxx seconds, turn off screen. After additional xxx seconds suspend system
    screen_off_wait_time=$1
    suspend_wait_time=$2

    lock_screen
    sleep $screen_off_wait_time && \
        pgrep i3lock && \
        xset dpms force off && \
        sleep $suspend_wait_time && \
        pgrep i3lock && \
        systemctl suspend
}

case "$1" in
    lock)
        lock_power_save $SCREEN_OFF_DEFAULT_WAIT_TIME_IN_SEC $SUSPEND_DEFAULT_WAIT_TIME_IN_SEC
        ;;
    suspend)
        lock_power_save 1 1
        ;;
    test)
        lock_power_save $SCREEN_OFF_DEFAULT_WAIT_TIME_IN_SEC $SUSPEND_DEFAULT_WAIT_TIME_IN_SEC
        ;;
    *)
        lock_power_save $SCREEN_OFF_DEFAULT_WAIT_TIME_IN_SEC $SUSPEND_DEFAULT_WAIT_TIME_IN_SEC
        ;;
esac
